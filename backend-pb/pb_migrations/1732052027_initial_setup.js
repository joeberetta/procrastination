/// <reference path="../pb_data/types.d.ts" />
migrate(
  (db) => {
    const snapshot = [
      {
        id: '_pb_users_auth_',
        name: 'users',
        type: 'auth',
        system: false,
        schema: [
          {
            system: false,
            id: 'users_name',
            name: 'name',
            type: 'text',
            required: false,
            presentable: false,
            unique: false,
            options: {
              min: null,
              max: null,
              pattern: '',
            },
          },
          {
            system: false,
            id: 'users_avatar',
            name: 'avatar',
            type: 'file',
            required: false,
            presentable: false,
            unique: false,
            options: {
              mimeTypes: ['image/jpeg', 'image/png', 'image/svg+xml', 'image/gif', 'image/webp'],
              thumbs: null,
              maxSelect: 1,
              maxSize: 5242880,
              protected: false,
            },
          },
        ],
        indexes: ['CREATE UNIQUE INDEX `idx_n5LeDK8` ON `users` (`username`)'],
        listRule: 'id = @request.auth.id',
        viewRule: 'id = @request.auth.id',
        createRule: '',
        updateRule: 'id = @request.auth.id',
        deleteRule: 'id = @request.auth.id',
        options: {
          allowEmailAuth: true,
          allowOAuth2Auth: true,
          allowUsernameAuth: true,
          exceptEmailDomains: null,
          manageRule: null,
          minPasswordLength: 8,
          onlyEmailDomains: null,
          onlyVerified: false,
          requireEmail: false,
        },
      },
      {
        id: '9hixrxr9cn450tm',
        name: 'habits',
        type: 'base',
        system: false,
        schema: [
          {
            system: false,
            id: 'kov01yvd',
            name: 'habit',
            type: 'text',
            required: true,
            presentable: false,
            unique: false,
            options: {
              min: null,
              max: null,
              pattern: '',
            },
          },
          {
            system: false,
            id: 'rsbxjjtx',
            name: 'user_id',
            type: 'relation',
            required: true,
            presentable: true,
            unique: false,
            options: {
              collectionId: '_pb_users_auth_',
              cascadeDelete: false,
              minSelect: null,
              maxSelect: 1,
              displayFields: null,
            },
          },
          {
            system: false,
            id: '67hkgq3t',
            name: 'completed',
            type: 'bool',
            required: false,
            presentable: true,
            unique: false,
            options: {},
          },
        ],
        indexes: [],
        listRule: '@request.auth.id = @collection.habits.user_id.id',
        viewRule: '@request.auth.id = @collection.habits.user_id.id',
        createRule: '@request.auth.id != ""',
        updateRule: '@request.auth.id = @collection.habits.user_id.id',
        deleteRule: '@request.auth.id = @collection.habits.user_id.id',
        options: {},
      },
      {
        id: 'h39zqbssd1ep2ed',
        name: 'habits_progress',
        type: 'base',
        system: false,
        schema: [
          {
            system: false,
            id: 'rojuupaz',
            name: 'date',
            type: 'date',
            required: true,
            presentable: true,
            unique: false,
            options: {
              min: '',
              max: '',
            },
          },
          {
            system: false,
            id: '0wa75fmh',
            name: 'done',
            type: 'bool',
            required: false,
            presentable: true,
            unique: false,
            options: {},
          },
          {
            system: false,
            id: '0jlimkra',
            name: 'note',
            type: 'text',
            required: false,
            presentable: true,
            unique: false,
            options: {
              min: null,
              max: 100,
              pattern: '',
            },
          },
          {
            system: false,
            id: 'vn5xjvmb',
            name: 'habit_id',
            type: 'relation',
            required: true,
            presentable: true,
            unique: false,
            options: {
              collectionId: '9hixrxr9cn450tm',
              cascadeDelete: true,
              minSelect: null,
              maxSelect: 1,
              displayFields: null,
            },
          },
        ],
        indexes: [],
        listRule: '@request.auth.id = @collection.habits.user_id.id && habit_id = @collection.habits.id',
        viewRule: '@request.auth.id = @collection.habits.user_id.id && habit_id = @collection.habits.id',
        createRule: '@request.auth.id = @collection.habits.user_id.id && habit_id = @collection.habits.id',
        updateRule: '@request.auth.id = @collection.habits.user_id.id && habit_id = @collection.habits.id',
        deleteRule: '@request.auth.id = @collection.habits.user_id.id && habit_id = @collection.habits.id',
        options: {},
      },
      {
        id: 'br3bwfl00za310o',
        name: 'meets_one_to_one',
        type: 'base',
        system: false,
        schema: [
          {
            system: false,
            id: 'kykij9mc',
            name: 'note',
            type: 'text',
            required: true,
            presentable: true,
            unique: false,
            options: {
              min: null,
              max: 4096,
              pattern: '',
            },
          },
          {
            system: false,
            id: 'oyuazqte',
            name: 'user_id',
            type: 'relation',
            required: true,
            presentable: false,
            unique: false,
            options: {
              collectionId: '_pb_users_auth_',
              cascadeDelete: false,
              minSelect: null,
              maxSelect: 1,
              displayFields: null,
            },
          },
        ],
        indexes: [],
        listRule: '@request.auth.id = @collection.meets_one_to_one.user_id.id',
        viewRule: '@request.auth.id = @collection.meets_one_to_one.user_id.id',
        createRule: '@request.auth.id != ""',
        updateRule: '@request.auth.id = @collection.meets_one_to_one.user_id.id',
        deleteRule: '@request.auth.id = @collection.meets_one_to_one.user_id.id',
        options: {},
      },
      {
        id: '2x10lh67edhxrnk',
        name: 'personal_visions',
        type: 'base',
        system: false,
        schema: [
          {
            system: false,
            id: '9ocuaekv',
            name: 'description',
            type: 'editor',
            required: true,
            presentable: true,
            unique: false,
            options: {
              convertUrls: false,
            },
          },
          {
            system: false,
            id: 'vejd3opn',
            name: 'user_id',
            type: 'relation',
            required: true,
            presentable: true,
            unique: false,
            options: {
              collectionId: '_pb_users_auth_',
              cascadeDelete: false,
              minSelect: null,
              maxSelect: 1,
              displayFields: null,
            },
          },
        ],
        indexes: [],
        listRule: '@request.auth.id = @collection.personal_visions.user_id.id',
        viewRule: '@request.auth.id = @collection.personal_visions.user_id.id',
        createRule: '@request.auth.id != ""',
        updateRule: '@request.auth.id = @collection.personal_visions.user_id.id',
        deleteRule: '@request.auth.id = @collection.personal_visions.user_id.id',
        options: {},
      },
      {
        id: '679jjxwcm9xpvmh',
        name: 'todo_today',
        type: 'base',
        system: false,
        schema: [
          {
            system: false,
            id: 'yxcmawxc',
            name: 'date',
            type: 'date',
            required: true,
            presentable: true,
            unique: false,
            options: {
              min: '',
              max: '',
            },
          },
          {
            system: false,
            id: 'cv9ps3kg',
            name: 'user_id',
            type: 'relation',
            required: true,
            presentable: true,
            unique: false,
            options: {
              collectionId: '_pb_users_auth_',
              cascadeDelete: false,
              minSelect: null,
              maxSelect: 1,
              displayFields: null,
            },
          },
          {
            system: false,
            id: 'o1jajnpz',
            name: 'task',
            type: 'text',
            required: true,
            presentable: true,
            unique: false,
            options: {
              min: null,
              max: null,
              pattern: '',
            },
          },
          {
            system: false,
            id: 'ic0ybgoj',
            name: 'description',
            type: 'editor',
            required: false,
            presentable: true,
            unique: false,
            options: {
              convertUrls: false,
            },
          },
          {
            system: false,
            id: 'vpfcflff',
            name: 'done',
            type: 'bool',
            required: false,
            presentable: false,
            unique: false,
            options: {},
          },
        ],
        indexes: [],
        listRule: '@request.auth.id = @collection.todo_today.user_id.id',
        viewRule: '@request.auth.id = @collection.todo_today.user_id.id',
        createRule: '@request.auth.id != ""',
        updateRule: '@request.auth.id = @collection.todo_today.user_id.id',
        deleteRule: '@request.auth.id = @collection.todo_today.user_id.id',
        options: {},
      },
    ];

    const collections = snapshot.map((item) => new Collection(item));

    return Dao(db).importCollections(collections, true, null);
  },
  (db) => {
    return null;
  }
);
